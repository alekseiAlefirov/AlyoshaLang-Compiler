// Implementation file for parser generated by fsyacc
module AlyoshaParser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open Microsoft.FSharp.Text.Lexing
open Microsoft.FSharp.Text.Parsing.ParseHelpers
# 1 "AlyoshaParser.fsy"


open AlyoshaAST


# 12 "obj\Debug\AlyoshaParser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | DOG
  | AND
  | OR
  | MATCH
  | WITH
  | ENDMATCH
  | FUN
  | FUNARROW
  | NUF
  | READNUM
  | READLINE
  | WRITE
  | WHILE
  | DO
  | OD
  | IF
  | THEN
  | ELSE
  | ELIF
  | FI
  | SEMICOLON
  | COLON
  | PLUS
  | MINUS
  | MUL
  | DIV
  | MOD
  | OF
  | UNION
  | ISEQUAL
  | NOTEQUAL
  | GREATER
  | NOTLESS
  | LESS
  | NOTGREATER
  | NOT
  | REASSIGN
  | EQUAL
  | LET
  | REC
  | ANDREC
  | REF
  | UNREF
  | LPAREN
  | RPAREN
  | LBRACE
  | RBRACE
  | PIPE
  | PROGRAM
  | ID of (string)
  | UNIT
  | STRINGVAL of (string)
  | BOOLVAL of (bool)
  | NUMVAL of (System.Int32)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_DOG
    | TOKEN_AND
    | TOKEN_OR
    | TOKEN_MATCH
    | TOKEN_WITH
    | TOKEN_ENDMATCH
    | TOKEN_FUN
    | TOKEN_FUNARROW
    | TOKEN_NUF
    | TOKEN_READNUM
    | TOKEN_READLINE
    | TOKEN_WRITE
    | TOKEN_WHILE
    | TOKEN_DO
    | TOKEN_OD
    | TOKEN_IF
    | TOKEN_THEN
    | TOKEN_ELSE
    | TOKEN_ELIF
    | TOKEN_FI
    | TOKEN_SEMICOLON
    | TOKEN_COLON
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_MUL
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_OF
    | TOKEN_UNION
    | TOKEN_ISEQUAL
    | TOKEN_NOTEQUAL
    | TOKEN_GREATER
    | TOKEN_NOTLESS
    | TOKEN_LESS
    | TOKEN_NOTGREATER
    | TOKEN_NOT
    | TOKEN_REASSIGN
    | TOKEN_EQUAL
    | TOKEN_LET
    | TOKEN_REC
    | TOKEN_ANDREC
    | TOKEN_REF
    | TOKEN_UNREF
    | TOKEN_LPAREN
    | TOKEN_RPAREN
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_PIPE
    | TOKEN_PROGRAM
    | TOKEN_ID
    | TOKEN_UNIT
    | TOKEN_STRINGVAL
    | TOKEN_BOOLVAL
    | TOKEN_NUMVAL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startstart
    | NONTERM_start
    | NONTERM_Prog
    | NONTERM_UnionBlock
    | NONTERM_UnionDef
    | NONTERM_TypeVariables
    | NONTERM_UnionElementList
    | NONTERM_UnionElement
    | NONTERM_TypeCortage
    | NONTERM_Block
    | NONTERM_ExpressionSequence
    | NONTERM_Statement
    | NONTERM_LetAssignment
    | NONTERM_LetRecursiveAssignment
    | NONTERM_RecAndList
    | NONTERM_Assignment
    | NONTERM_Reassignment
    | NONTERM_IfStatement
    | NONTERM_ElifList
    | NONTERM_WhileStatement
    | NONTERM_WriteStatement
    | NONTERM_MatchStatement
    | NONTERM_GuardList
    | NONTERM_Guard
    | NONTERM_GuardArgs
    | NONTERM_Expression
    | NONTERM_RightLogicTermList
    | NONTERM_Application
    | NONTERM_LeftAppPart
    | NONTERM_ApplicantsList
    | NONTERM_Abstraction
    | NONTERM_FunArguments
    | NONTERM_IdList
    | NONTERM_LogicTerm
    | NONTERM_RightLogicFactorList
    | NONTERM_LogicFactor
    | NONTERM_CompOp
    | NONTERM_SumOp
    | NONTERM_ArithmeticOp
    | NONTERM_StringConcat
    | NONTERM_StringConcatList
    | NONTERM_RightTermList
    | NONTERM_ArithmeticOpSign
    | NONTERM_Term
    | NONTERM_RightFactorList
    | NONTERM_FactorOpSign
    | NONTERM_Factor
    | NONTERM_ModFactor
    | NONTERM_Reference
    | NONTERM_Unreference
    | NONTERM_SimpleFactor
    | NONTERM_SimpleValue
    | NONTERM_Id

// This function maps tokens to integers indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | DOG  -> 1 
  | AND  -> 2 
  | OR  -> 3 
  | MATCH  -> 4 
  | WITH  -> 5 
  | ENDMATCH  -> 6 
  | FUN  -> 7 
  | FUNARROW  -> 8 
  | NUF  -> 9 
  | READNUM  -> 10 
  | READLINE  -> 11 
  | WRITE  -> 12 
  | WHILE  -> 13 
  | DO  -> 14 
  | OD  -> 15 
  | IF  -> 16 
  | THEN  -> 17 
  | ELSE  -> 18 
  | ELIF  -> 19 
  | FI  -> 20 
  | SEMICOLON  -> 21 
  | COLON  -> 22 
  | PLUS  -> 23 
  | MINUS  -> 24 
  | MUL  -> 25 
  | DIV  -> 26 
  | MOD  -> 27 
  | OF  -> 28 
  | UNION  -> 29 
  | ISEQUAL  -> 30 
  | NOTEQUAL  -> 31 
  | GREATER  -> 32 
  | NOTLESS  -> 33 
  | LESS  -> 34 
  | NOTGREATER  -> 35 
  | NOT  -> 36 
  | REASSIGN  -> 37 
  | EQUAL  -> 38 
  | LET  -> 39 
  | REC  -> 40 
  | ANDREC  -> 41 
  | REF  -> 42 
  | UNREF  -> 43 
  | LPAREN  -> 44 
  | RPAREN  -> 45 
  | LBRACE  -> 46 
  | RBRACE  -> 47 
  | PIPE  -> 48 
  | PROGRAM  -> 49 
  | ID _ -> 50 
  | UNIT  -> 51 
  | STRINGVAL _ -> 52 
  | BOOLVAL _ -> 53 
  | NUMVAL _ -> 54 

// This function maps integers indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_DOG 
  | 2 -> TOKEN_AND 
  | 3 -> TOKEN_OR 
  | 4 -> TOKEN_MATCH 
  | 5 -> TOKEN_WITH 
  | 6 -> TOKEN_ENDMATCH 
  | 7 -> TOKEN_FUN 
  | 8 -> TOKEN_FUNARROW 
  | 9 -> TOKEN_NUF 
  | 10 -> TOKEN_READNUM 
  | 11 -> TOKEN_READLINE 
  | 12 -> TOKEN_WRITE 
  | 13 -> TOKEN_WHILE 
  | 14 -> TOKEN_DO 
  | 15 -> TOKEN_OD 
  | 16 -> TOKEN_IF 
  | 17 -> TOKEN_THEN 
  | 18 -> TOKEN_ELSE 
  | 19 -> TOKEN_ELIF 
  | 20 -> TOKEN_FI 
  | 21 -> TOKEN_SEMICOLON 
  | 22 -> TOKEN_COLON 
  | 23 -> TOKEN_PLUS 
  | 24 -> TOKEN_MINUS 
  | 25 -> TOKEN_MUL 
  | 26 -> TOKEN_DIV 
  | 27 -> TOKEN_MOD 
  | 28 -> TOKEN_OF 
  | 29 -> TOKEN_UNION 
  | 30 -> TOKEN_ISEQUAL 
  | 31 -> TOKEN_NOTEQUAL 
  | 32 -> TOKEN_GREATER 
  | 33 -> TOKEN_NOTLESS 
  | 34 -> TOKEN_LESS 
  | 35 -> TOKEN_NOTGREATER 
  | 36 -> TOKEN_NOT 
  | 37 -> TOKEN_REASSIGN 
  | 38 -> TOKEN_EQUAL 
  | 39 -> TOKEN_LET 
  | 40 -> TOKEN_REC 
  | 41 -> TOKEN_ANDREC 
  | 42 -> TOKEN_REF 
  | 43 -> TOKEN_UNREF 
  | 44 -> TOKEN_LPAREN 
  | 45 -> TOKEN_RPAREN 
  | 46 -> TOKEN_LBRACE 
  | 47 -> TOKEN_RBRACE 
  | 48 -> TOKEN_PIPE 
  | 49 -> TOKEN_PROGRAM 
  | 50 -> TOKEN_ID 
  | 51 -> TOKEN_UNIT 
  | 52 -> TOKEN_STRINGVAL 
  | 53 -> TOKEN_BOOLVAL 
  | 54 -> TOKEN_NUMVAL 
  | 57 -> TOKEN_end_of_input
  | 55 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startstart 
    | 1 -> NONTERM_start 
    | 2 -> NONTERM_Prog 
    | 3 -> NONTERM_Prog 
    | 4 -> NONTERM_UnionBlock 
    | 5 -> NONTERM_UnionBlock 
    | 6 -> NONTERM_UnionDef 
    | 7 -> NONTERM_TypeVariables 
    | 8 -> NONTERM_TypeVariables 
    | 9 -> NONTERM_UnionElementList 
    | 10 -> NONTERM_UnionElementList 
    | 11 -> NONTERM_UnionElement 
    | 12 -> NONTERM_UnionElement 
    | 13 -> NONTERM_TypeCortage 
    | 14 -> NONTERM_TypeCortage 
    | 15 -> NONTERM_Block 
    | 16 -> NONTERM_ExpressionSequence 
    | 17 -> NONTERM_ExpressionSequence 
    | 18 -> NONTERM_Statement 
    | 19 -> NONTERM_Statement 
    | 20 -> NONTERM_Statement 
    | 21 -> NONTERM_Statement 
    | 22 -> NONTERM_Statement 
    | 23 -> NONTERM_Statement 
    | 24 -> NONTERM_Statement 
    | 25 -> NONTERM_LetAssignment 
    | 26 -> NONTERM_LetRecursiveAssignment 
    | 27 -> NONTERM_RecAndList 
    | 28 -> NONTERM_RecAndList 
    | 29 -> NONTERM_Assignment 
    | 30 -> NONTERM_Assignment 
    | 31 -> NONTERM_Assignment 
    | 32 -> NONTERM_Reassignment 
    | 33 -> NONTERM_Reassignment 
    | 34 -> NONTERM_Reassignment 
    | 35 -> NONTERM_IfStatement 
    | 36 -> NONTERM_IfStatement 
    | 37 -> NONTERM_ElifList 
    | 38 -> NONTERM_ElifList 
    | 39 -> NONTERM_ElifList 
    | 40 -> NONTERM_WhileStatement 
    | 41 -> NONTERM_WriteStatement 
    | 42 -> NONTERM_MatchStatement 
    | 43 -> NONTERM_GuardList 
    | 44 -> NONTERM_GuardList 
    | 45 -> NONTERM_Guard 
    | 46 -> NONTERM_GuardArgs 
    | 47 -> NONTERM_GuardArgs 
    | 48 -> NONTERM_Expression 
    | 49 -> NONTERM_Expression 
    | 50 -> NONTERM_Expression 
    | 51 -> NONTERM_Expression 
    | 52 -> NONTERM_Expression 
    | 53 -> NONTERM_Expression 
    | 54 -> NONTERM_RightLogicTermList 
    | 55 -> NONTERM_RightLogicTermList 
    | 56 -> NONTERM_Application 
    | 57 -> NONTERM_LeftAppPart 
    | 58 -> NONTERM_LeftAppPart 
    | 59 -> NONTERM_ApplicantsList 
    | 60 -> NONTERM_ApplicantsList 
    | 61 -> NONTERM_Abstraction 
    | 62 -> NONTERM_FunArguments 
    | 63 -> NONTERM_FunArguments 
    | 64 -> NONTERM_IdList 
    | 65 -> NONTERM_IdList 
    | 66 -> NONTERM_LogicTerm 
    | 67 -> NONTERM_LogicTerm 
    | 68 -> NONTERM_RightLogicFactorList 
    | 69 -> NONTERM_RightLogicFactorList 
    | 70 -> NONTERM_LogicFactor 
    | 71 -> NONTERM_LogicFactor 
    | 72 -> NONTERM_CompOp 
    | 73 -> NONTERM_CompOp 
    | 74 -> NONTERM_CompOp 
    | 75 -> NONTERM_CompOp 
    | 76 -> NONTERM_CompOp 
    | 77 -> NONTERM_CompOp 
    | 78 -> NONTERM_CompOp 
    | 79 -> NONTERM_SumOp 
    | 80 -> NONTERM_SumOp 
    | 81 -> NONTERM_ArithmeticOp 
    | 82 -> NONTERM_ArithmeticOp 
    | 83 -> NONTERM_StringConcat 
    | 84 -> NONTERM_StringConcatList 
    | 85 -> NONTERM_StringConcatList 
    | 86 -> NONTERM_RightTermList 
    | 87 -> NONTERM_RightTermList 
    | 88 -> NONTERM_ArithmeticOpSign 
    | 89 -> NONTERM_ArithmeticOpSign 
    | 90 -> NONTERM_Term 
    | 91 -> NONTERM_Term 
    | 92 -> NONTERM_RightFactorList 
    | 93 -> NONTERM_RightFactorList 
    | 94 -> NONTERM_FactorOpSign 
    | 95 -> NONTERM_FactorOpSign 
    | 96 -> NONTERM_Factor 
    | 97 -> NONTERM_Factor 
    | 98 -> NONTERM_ModFactor 
    | 99 -> NONTERM_ModFactor 
    | 100 -> NONTERM_ModFactor 
    | 101 -> NONTERM_ModFactor 
    | 102 -> NONTERM_Reference 
    | 103 -> NONTERM_Unreference 
    | 104 -> NONTERM_SimpleFactor 
    | 105 -> NONTERM_SimpleFactor 
    | 106 -> NONTERM_SimpleValue 
    | 107 -> NONTERM_SimpleValue 
    | 108 -> NONTERM_SimpleValue 
    | 109 -> NONTERM_SimpleValue 
    | 110 -> NONTERM_Id 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 57 
let _fsyacc_tagOfErrorTerminal = 55

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | DOG  -> "DOG" 
  | AND  -> "AND" 
  | OR  -> "OR" 
  | MATCH  -> "MATCH" 
  | WITH  -> "WITH" 
  | ENDMATCH  -> "ENDMATCH" 
  | FUN  -> "FUN" 
  | FUNARROW  -> "FUNARROW" 
  | NUF  -> "NUF" 
  | READNUM  -> "READNUM" 
  | READLINE  -> "READLINE" 
  | WRITE  -> "WRITE" 
  | WHILE  -> "WHILE" 
  | DO  -> "DO" 
  | OD  -> "OD" 
  | IF  -> "IF" 
  | THEN  -> "THEN" 
  | ELSE  -> "ELSE" 
  | ELIF  -> "ELIF" 
  | FI  -> "FI" 
  | SEMICOLON  -> "SEMICOLON" 
  | COLON  -> "COLON" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | MUL  -> "MUL" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | OF  -> "OF" 
  | UNION  -> "UNION" 
  | ISEQUAL  -> "ISEQUAL" 
  | NOTEQUAL  -> "NOTEQUAL" 
  | GREATER  -> "GREATER" 
  | NOTLESS  -> "NOTLESS" 
  | LESS  -> "LESS" 
  | NOTGREATER  -> "NOTGREATER" 
  | NOT  -> "NOT" 
  | REASSIGN  -> "REASSIGN" 
  | EQUAL  -> "EQUAL" 
  | LET  -> "LET" 
  | REC  -> "REC" 
  | ANDREC  -> "ANDREC" 
  | REF  -> "REF" 
  | UNREF  -> "UNREF" 
  | LPAREN  -> "LPAREN" 
  | RPAREN  -> "RPAREN" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | PIPE  -> "PIPE" 
  | PROGRAM  -> "PROGRAM" 
  | ID _ -> "ID" 
  | UNIT  -> "UNIT" 
  | STRINGVAL _ -> "STRINGVAL" 
  | BOOLVAL _ -> "BOOLVAL" 
  | NUMVAL _ -> "NUMVAL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | DOG  -> (null : System.Object) 
  | AND  -> (null : System.Object) 
  | OR  -> (null : System.Object) 
  | MATCH  -> (null : System.Object) 
  | WITH  -> (null : System.Object) 
  | ENDMATCH  -> (null : System.Object) 
  | FUN  -> (null : System.Object) 
  | FUNARROW  -> (null : System.Object) 
  | NUF  -> (null : System.Object) 
  | READNUM  -> (null : System.Object) 
  | READLINE  -> (null : System.Object) 
  | WRITE  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | OD  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | THEN  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | ELIF  -> (null : System.Object) 
  | FI  -> (null : System.Object) 
  | SEMICOLON  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | MUL  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | OF  -> (null : System.Object) 
  | UNION  -> (null : System.Object) 
  | ISEQUAL  -> (null : System.Object) 
  | NOTEQUAL  -> (null : System.Object) 
  | GREATER  -> (null : System.Object) 
  | NOTLESS  -> (null : System.Object) 
  | LESS  -> (null : System.Object) 
  | NOTGREATER  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | REASSIGN  -> (null : System.Object) 
  | EQUAL  -> (null : System.Object) 
  | LET  -> (null : System.Object) 
  | REC  -> (null : System.Object) 
  | ANDREC  -> (null : System.Object) 
  | REF  -> (null : System.Object) 
  | UNREF  -> (null : System.Object) 
  | LPAREN  -> (null : System.Object) 
  | RPAREN  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | PIPE  -> (null : System.Object) 
  | PROGRAM  -> (null : System.Object) 
  | ID _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UNIT  -> (null : System.Object) 
  | STRINGVAL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BOOLVAL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NUMVAL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 1us; 65535us; 0us; 2us; 2us; 65535us; 5us; 6us; 9us; 10us; 2us; 65535us; 5us; 9us; 9us; 9us; 2us; 65535us; 12us; 13us; 18us; 19us; 2us; 65535us; 15us; 16us; 21us; 22us; 2us; 65535us; 15us; 20us; 21us; 20us; 2us; 65535us; 24us; 25us; 27us; 28us; 8us; 65535us; 5us; 8us; 6us; 7us; 70us; 71us; 74us; 75us; 79us; 80us; 85us; 86us; 100us; 101us; 109us; 110us; 9us; 65535us; 5us; 29us; 6us; 29us; 31us; 32us; 70us; 29us; 74us; 29us; 79us; 29us; 85us; 29us; 100us; 29us; 109us; 29us; 22us; 65535us; 5us; 104us; 6us; 104us; 31us; 104us; 45us; 104us; 51us; 104us; 55us; 104us; 62us; 104us; 68us; 104us; 70us; 104us; 74us; 104us; 77us; 104us; 79us; 104us; 83us; 104us; 85us; 104us; 88us; 104us; 100us; 104us; 109us; 104us; 115us; 104us; 117us; 104us; 120us; 104us; 124us; 104us; 179us; 104us; 22us; 65535us; 5us; 33us; 6us; 33us; 31us; 33us; 45us; 33us; 51us; 33us; 55us; 33us; 62us; 33us; 68us; 33us; 70us; 33us; 74us; 33us; 77us; 33us; 79us; 33us; 83us; 33us; 85us; 33us; 88us; 33us; 100us; 33us; 109us; 33us; 115us; 33us; 117us; 33us; 120us; 33us; 124us; 33us; 179us; 33us; 22us; 65535us; 5us; 34us; 6us; 34us; 31us; 34us; 45us; 34us; 51us; 34us; 55us; 34us; 62us; 34us; 68us; 34us; 70us; 34us; 74us; 34us; 77us; 34us; 79us; 34us; 83us; 34us; 85us; 34us; 88us; 34us; 100us; 34us; 109us; 34us; 115us; 34us; 117us; 34us; 120us; 34us; 124us; 34us; 179us; 34us; 2us; 65535us; 46us; 47us; 52us; 53us; 1us; 65535us; 40us; 41us; 22us; 65535us; 5us; 35us; 6us; 35us; 31us; 35us; 45us; 35us; 51us; 35us; 55us; 35us; 62us; 35us; 68us; 35us; 70us; 35us; 74us; 35us; 77us; 35us; 79us; 35us; 83us; 35us; 85us; 35us; 88us; 35us; 100us; 35us; 109us; 35us; 115us; 35us; 117us; 35us; 120us; 35us; 124us; 35us; 179us; 35us; 22us; 65535us; 5us; 36us; 6us; 36us; 31us; 36us; 45us; 36us; 51us; 36us; 55us; 36us; 62us; 36us; 68us; 36us; 70us; 36us; 74us; 36us; 77us; 36us; 79us; 36us; 83us; 36us; 85us; 36us; 88us; 36us; 100us; 36us; 109us; 36us; 115us; 36us; 117us; 36us; 120us; 36us; 124us; 36us; 179us; 36us; 2us; 65535us; 72us; 73us; 81us; 82us; 22us; 65535us; 5us; 37us; 6us; 37us; 31us; 37us; 45us; 37us; 51us; 37us; 55us; 37us; 62us; 37us; 68us; 37us; 70us; 37us; 74us; 37us; 77us; 37us; 79us; 37us; 83us; 37us; 85us; 37us; 88us; 37us; 100us; 37us; 109us; 37us; 115us; 37us; 117us; 37us; 120us; 37us; 124us; 37us; 179us; 37us; 22us; 65535us; 5us; 38us; 6us; 38us; 31us; 38us; 45us; 38us; 51us; 38us; 55us; 38us; 62us; 38us; 68us; 38us; 70us; 38us; 74us; 38us; 77us; 38us; 79us; 38us; 83us; 38us; 85us; 38us; 88us; 38us; 100us; 38us; 109us; 38us; 115us; 38us; 117us; 38us; 120us; 38us; 124us; 38us; 179us; 38us; 22us; 65535us; 5us; 39us; 6us; 39us; 31us; 39us; 45us; 39us; 51us; 39us; 55us; 39us; 62us; 39us; 68us; 39us; 70us; 39us; 74us; 39us; 77us; 39us; 79us; 39us; 83us; 39us; 85us; 39us; 88us; 39us; 100us; 39us; 109us; 39us; 115us; 39us; 117us; 39us; 120us; 39us; 124us; 39us; 179us; 39us; 2us; 65535us; 92us; 93us; 95us; 96us; 2us; 65535us; 92us; 95us; 95us; 95us; 2us; 65535us; 98us; 99us; 102us; 103us; 22us; 65535us; 5us; 30us; 6us; 30us; 31us; 30us; 45us; 46us; 51us; 52us; 55us; 56us; 62us; 63us; 68us; 69us; 70us; 30us; 74us; 30us; 77us; 78us; 79us; 30us; 83us; 84us; 85us; 30us; 88us; 89us; 100us; 30us; 109us; 30us; 115us; 120us; 117us; 118us; 120us; 120us; 124us; 125us; 179us; 180us; 2us; 65535us; 105us; 106us; 113us; 114us; 22us; 65535us; 5us; 108us; 6us; 108us; 31us; 108us; 45us; 108us; 51us; 108us; 55us; 108us; 62us; 108us; 68us; 108us; 70us; 108us; 74us; 108us; 77us; 108us; 79us; 108us; 83us; 108us; 85us; 108us; 88us; 108us; 100us; 108us; 109us; 108us; 115us; 108us; 117us; 108us; 120us; 108us; 124us; 108us; 179us; 108us; 22us; 65535us; 5us; 115us; 6us; 115us; 31us; 115us; 45us; 115us; 51us; 115us; 55us; 115us; 62us; 115us; 68us; 115us; 70us; 115us; 74us; 115us; 77us; 115us; 79us; 115us; 83us; 115us; 85us; 115us; 88us; 115us; 100us; 115us; 109us; 115us; 115us; 115us; 117us; 115us; 120us; 115us; 124us; 115us; 179us; 115us; 2us; 65535us; 115us; 116us; 120us; 121us; 22us; 65535us; 5us; 107us; 6us; 107us; 31us; 107us; 45us; 107us; 51us; 107us; 55us; 107us; 62us; 107us; 68us; 107us; 70us; 107us; 74us; 107us; 77us; 107us; 79us; 107us; 83us; 107us; 85us; 107us; 88us; 107us; 100us; 107us; 109us; 107us; 115us; 107us; 117us; 107us; 120us; 107us; 124us; 107us; 179us; 107us; 3us; 65535us; 43us; 44us; 49us; 50us; 122us; 123us; 4us; 65535us; 43us; 127us; 49us; 127us; 122us; 127us; 128us; 129us; 23us; 65535us; 5us; 105us; 6us; 105us; 31us; 105us; 45us; 105us; 51us; 105us; 55us; 105us; 62us; 105us; 68us; 105us; 70us; 105us; 74us; 105us; 77us; 105us; 79us; 105us; 83us; 105us; 85us; 105us; 88us; 105us; 100us; 105us; 109us; 105us; 112us; 113us; 115us; 105us; 117us; 105us; 120us; 105us; 124us; 105us; 179us; 105us; 2us; 65535us; 130us; 131us; 133us; 134us; 24us; 65535us; 5us; 130us; 6us; 130us; 31us; 130us; 45us; 130us; 51us; 130us; 55us; 130us; 62us; 130us; 68us; 130us; 70us; 130us; 74us; 130us; 77us; 130us; 79us; 130us; 83us; 130us; 85us; 130us; 88us; 130us; 100us; 130us; 109us; 130us; 112us; 130us; 115us; 130us; 117us; 130us; 120us; 130us; 124us; 130us; 132us; 133us; 179us; 130us; 25us; 65535us; 5us; 135us; 6us; 135us; 31us; 135us; 45us; 135us; 51us; 135us; 55us; 135us; 62us; 135us; 68us; 135us; 70us; 135us; 74us; 135us; 77us; 135us; 79us; 135us; 83us; 135us; 85us; 135us; 88us; 135us; 100us; 135us; 109us; 135us; 112us; 135us; 115us; 135us; 117us; 135us; 120us; 135us; 124us; 135us; 132us; 135us; 136us; 137us; 179us; 135us; 31us; 65535us; 5us; 138us; 6us; 138us; 31us; 138us; 45us; 138us; 51us; 138us; 55us; 138us; 62us; 138us; 68us; 138us; 70us; 138us; 74us; 138us; 77us; 138us; 79us; 138us; 83us; 138us; 85us; 138us; 88us; 138us; 100us; 138us; 109us; 138us; 112us; 138us; 115us; 138us; 117us; 138us; 120us; 138us; 124us; 138us; 132us; 138us; 136us; 138us; 139us; 140us; 141us; 142us; 143us; 144us; 145us; 146us; 147us; 148us; 149us; 150us; 179us; 138us; 31us; 65535us; 5us; 151us; 6us; 151us; 31us; 151us; 45us; 151us; 51us; 151us; 55us; 151us; 62us; 151us; 68us; 151us; 70us; 151us; 74us; 151us; 77us; 151us; 79us; 151us; 83us; 151us; 85us; 151us; 88us; 151us; 100us; 151us; 109us; 151us; 112us; 151us; 115us; 151us; 117us; 151us; 120us; 151us; 124us; 151us; 132us; 151us; 136us; 151us; 139us; 151us; 141us; 151us; 143us; 151us; 145us; 151us; 147us; 151us; 149us; 151us; 179us; 151us; 31us; 65535us; 5us; 152us; 6us; 152us; 31us; 152us; 45us; 152us; 51us; 152us; 55us; 152us; 62us; 152us; 68us; 152us; 70us; 152us; 74us; 152us; 77us; 152us; 79us; 152us; 83us; 152us; 85us; 152us; 88us; 152us; 100us; 152us; 109us; 152us; 112us; 152us; 115us; 152us; 117us; 152us; 120us; 152us; 124us; 152us; 132us; 152us; 136us; 152us; 139us; 152us; 141us; 152us; 143us; 152us; 145us; 152us; 147us; 152us; 149us; 152us; 179us; 152us; 2us; 65535us; 156us; 157us; 159us; 160us; 2us; 65535us; 153us; 154us; 162us; 163us; 2us; 65535us; 153us; 161us; 162us; 161us; 32us; 65535us; 5us; 153us; 6us; 153us; 31us; 153us; 45us; 153us; 51us; 153us; 55us; 153us; 62us; 153us; 68us; 153us; 70us; 153us; 74us; 153us; 77us; 153us; 79us; 153us; 83us; 153us; 85us; 153us; 88us; 153us; 100us; 153us; 109us; 153us; 112us; 153us; 115us; 153us; 117us; 153us; 120us; 153us; 124us; 153us; 132us; 153us; 136us; 153us; 139us; 153us; 141us; 153us; 143us; 153us; 145us; 153us; 147us; 153us; 149us; 153us; 161us; 162us; 179us; 153us; 2us; 65535us; 166us; 167us; 169us; 170us; 2us; 65535us; 166us; 168us; 169us; 168us; 33us; 65535us; 5us; 166us; 6us; 166us; 31us; 166us; 45us; 166us; 51us; 166us; 55us; 166us; 62us; 166us; 68us; 166us; 70us; 166us; 74us; 166us; 77us; 166us; 79us; 166us; 83us; 166us; 85us; 166us; 88us; 166us; 100us; 166us; 109us; 166us; 112us; 166us; 115us; 166us; 117us; 166us; 120us; 166us; 124us; 166us; 132us; 166us; 136us; 166us; 139us; 166us; 141us; 166us; 143us; 166us; 145us; 166us; 147us; 166us; 149us; 166us; 161us; 166us; 168us; 169us; 179us; 166us; 36us; 65535us; 5us; 173us; 6us; 173us; 31us; 173us; 45us; 173us; 51us; 173us; 55us; 173us; 62us; 173us; 68us; 173us; 70us; 173us; 74us; 173us; 77us; 173us; 79us; 173us; 83us; 173us; 85us; 173us; 88us; 173us; 100us; 173us; 109us; 173us; 112us; 173us; 115us; 173us; 117us; 173us; 120us; 173us; 124us; 173us; 132us; 173us; 136us; 173us; 139us; 173us; 141us; 173us; 143us; 173us; 145us; 173us; 147us; 173us; 149us; 173us; 161us; 173us; 168us; 173us; 174us; 175us; 179us; 173us; 182us; 183us; 184us; 185us; 36us; 65535us; 5us; 177us; 6us; 177us; 31us; 177us; 45us; 177us; 51us; 177us; 55us; 177us; 62us; 177us; 68us; 177us; 70us; 177us; 74us; 177us; 77us; 177us; 79us; 177us; 83us; 177us; 85us; 177us; 88us; 177us; 100us; 177us; 109us; 177us; 112us; 177us; 115us; 177us; 117us; 177us; 120us; 177us; 124us; 177us; 132us; 177us; 136us; 177us; 139us; 177us; 141us; 177us; 143us; 177us; 145us; 177us; 147us; 177us; 149us; 177us; 161us; 177us; 168us; 177us; 174us; 177us; 179us; 177us; 182us; 177us; 184us; 177us; 36us; 65535us; 5us; 178us; 6us; 178us; 31us; 178us; 45us; 178us; 51us; 178us; 55us; 178us; 62us; 178us; 68us; 178us; 70us; 178us; 74us; 178us; 77us; 178us; 79us; 178us; 83us; 178us; 85us; 178us; 88us; 178us; 100us; 178us; 109us; 178us; 112us; 178us; 115us; 178us; 117us; 178us; 120us; 178us; 124us; 178us; 132us; 178us; 136us; 178us; 139us; 178us; 141us; 178us; 143us; 178us; 145us; 178us; 147us; 178us; 149us; 178us; 161us; 178us; 168us; 178us; 174us; 178us; 179us; 178us; 182us; 178us; 184us; 178us; 38us; 65535us; 5us; 155us; 6us; 155us; 31us; 155us; 45us; 155us; 51us; 155us; 55us; 155us; 62us; 155us; 68us; 155us; 70us; 155us; 74us; 155us; 77us; 155us; 79us; 155us; 83us; 155us; 85us; 155us; 88us; 155us; 100us; 155us; 109us; 155us; 112us; 155us; 115us; 155us; 117us; 155us; 120us; 155us; 124us; 155us; 132us; 155us; 136us; 155us; 139us; 155us; 141us; 155us; 143us; 155us; 145us; 155us; 147us; 155us; 149us; 155us; 156us; 158us; 159us; 158us; 161us; 176us; 168us; 176us; 174us; 176us; 179us; 155us; 182us; 176us; 184us; 176us; 38us; 65535us; 5us; 187us; 6us; 187us; 31us; 187us; 45us; 187us; 51us; 187us; 55us; 187us; 62us; 187us; 68us; 187us; 70us; 187us; 74us; 187us; 77us; 187us; 79us; 187us; 83us; 187us; 85us; 187us; 88us; 187us; 100us; 187us; 109us; 187us; 112us; 187us; 115us; 187us; 117us; 187us; 120us; 187us; 124us; 187us; 132us; 187us; 136us; 187us; 139us; 187us; 141us; 187us; 143us; 187us; 145us; 187us; 147us; 187us; 149us; 187us; 156us; 187us; 159us; 187us; 161us; 187us; 168us; 187us; 174us; 187us; 179us; 187us; 182us; 187us; 184us; 187us; 50us; 65535us; 5us; 61us; 6us; 61us; 31us; 61us; 40us; 54us; 42us; 43us; 43us; 128us; 45us; 61us; 48us; 49us; 49us; 128us; 51us; 61us; 55us; 61us; 57us; 58us; 59us; 60us; 62us; 61us; 64us; 65us; 66us; 67us; 68us; 61us; 70us; 61us; 74us; 61us; 77us; 61us; 79us; 61us; 83us; 61us; 85us; 61us; 88us; 61us; 90us; 91us; 100us; 61us; 109us; 61us; 112us; 186us; 115us; 61us; 117us; 61us; 120us; 61us; 122us; 128us; 124us; 61us; 128us; 128us; 132us; 186us; 136us; 186us; 139us; 186us; 141us; 186us; 143us; 186us; 145us; 186us; 147us; 186us; 149us; 186us; 156us; 186us; 159us; 186us; 161us; 186us; 168us; 186us; 174us; 186us; 179us; 61us; 182us; 186us; 184us; 186us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 5us; 8us; 11us; 14us; 17us; 20us; 23us; 32us; 42us; 65us; 88us; 111us; 114us; 116us; 139us; 162us; 165us; 188us; 211us; 234us; 237us; 240us; 243us; 266us; 269us; 292us; 315us; 318us; 341us; 345us; 350us; 374us; 377us; 402us; 428us; 460us; 492us; 524us; 527us; 530us; 533us; 566us; 569us; 572us; 606us; 643us; 680us; 717us; 756us; 795us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 2us; 2us; 3us; 2us; 2us; 3us; 1us; 2us; 1us; 2us; 1us; 3us; 2us; 4us; 5us; 1us; 4us; 1us; 6us; 1us; 6us; 1us; 6us; 1us; 6us; 1us; 6us; 1us; 6us; 1us; 6us; 1us; 7us; 1us; 7us; 2us; 9us; 10us; 1us; 9us; 1us; 9us; 2us; 11us; 12us; 1us; 11us; 1us; 11us; 2us; 13us; 14us; 1us; 13us; 1us; 13us; 1us; 15us; 2us; 16us; 17us; 1us; 16us; 1us; 16us; 1us; 18us; 1us; 19us; 1us; 20us; 1us; 21us; 1us; 22us; 1us; 23us; 1us; 24us; 2us; 25us; 26us; 1us; 25us; 1us; 26us; 1us; 26us; 1us; 26us; 1us; 26us; 1us; 26us; 1us; 26us; 1us; 27us; 1us; 27us; 1us; 27us; 1us; 27us; 1us; 27us; 1us; 27us; 1us; 29us; 1us; 29us; 1us; 29us; 1us; 30us; 1us; 30us; 1us; 31us; 1us; 31us; 3us; 32us; 57us; 104us; 1us; 32us; 1us; 32us; 1us; 33us; 1us; 33us; 1us; 34us; 1us; 34us; 2us; 35us; 36us; 2us; 35us; 36us; 2us; 35us; 36us; 2us; 35us; 36us; 2us; 35us; 36us; 2us; 35us; 36us; 1us; 35us; 1us; 35us; 1us; 35us; 2us; 37us; 38us; 2us; 37us; 38us; 2us; 37us; 38us; 2us; 37us; 38us; 2us; 37us; 38us; 1us; 37us; 1us; 40us; 1us; 40us; 1us; 40us; 1us; 40us; 1us; 40us; 1us; 41us; 1us; 41us; 1us; 42us; 1us; 42us; 1us; 42us; 1us; 42us; 1us; 42us; 2us; 43us; 44us; 1us; 43us; 1us; 45us; 1us; 45us; 1us; 45us; 1us; 45us; 1us; 45us; 1us; 46us; 1us; 46us; 1us; 48us; 2us; 49us; 50us; 1us; 49us; 1us; 51us; 1us; 52us; 1us; 53us; 1us; 53us; 1us; 53us; 2us; 54us; 55us; 2us; 54us; 55us; 1us; 54us; 1us; 56us; 1us; 56us; 2us; 58us; 101us; 2us; 58us; 101us; 2us; 58us; 101us; 2us; 59us; 60us; 1us; 59us; 1us; 61us; 1us; 61us; 1us; 61us; 1us; 61us; 1us; 62us; 1us; 63us; 2us; 64us; 65us; 1us; 64us; 2us; 66us; 67us; 1us; 66us; 2us; 68us; 69us; 2us; 68us; 69us; 1us; 68us; 1us; 70us; 1us; 71us; 1us; 71us; 7us; 72us; 73us; 74us; 75us; 76us; 77us; 78us; 1us; 72us; 1us; 72us; 1us; 73us; 1us; 73us; 1us; 74us; 1us; 74us; 1us; 75us; 1us; 75us; 1us; 76us; 1us; 76us; 1us; 77us; 1us; 77us; 1us; 79us; 1us; 80us; 2us; 81us; 82us; 1us; 81us; 2us; 83us; 98us; 1us; 83us; 1us; 83us; 2us; 84us; 85us; 1us; 84us; 1us; 84us; 2us; 86us; 87us; 2us; 86us; 87us; 1us; 86us; 1us; 88us; 1us; 89us; 2us; 90us; 91us; 1us; 90us; 2us; 92us; 93us; 2us; 92us; 93us; 1us; 92us; 1us; 94us; 1us; 95us; 2us; 96us; 97us; 1us; 96us; 1us; 96us; 1us; 98us; 1us; 99us; 1us; 100us; 1us; 101us; 1us; 101us; 1us; 101us; 1us; 102us; 1us; 102us; 1us; 103us; 1us; 103us; 1us; 104us; 1us; 105us; 1us; 106us; 1us; 107us; 1us; 108us; 1us; 109us; 1us; 110us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 11us; 14us; 16us; 18us; 20us; 23us; 25us; 27us; 29us; 31us; 33us; 35us; 37us; 39us; 41us; 43us; 46us; 48us; 50us; 53us; 55us; 57us; 60us; 62us; 64us; 66us; 69us; 71us; 73us; 75us; 77us; 79us; 81us; 83us; 85us; 87us; 90us; 92us; 94us; 96us; 98us; 100us; 102us; 104us; 106us; 108us; 110us; 112us; 114us; 116us; 118us; 120us; 122us; 124us; 126us; 128us; 130us; 134us; 136us; 138us; 140us; 142us; 144us; 146us; 149us; 152us; 155us; 158us; 161us; 164us; 166us; 168us; 170us; 173us; 176us; 179us; 182us; 185us; 187us; 189us; 191us; 193us; 195us; 197us; 199us; 201us; 203us; 205us; 207us; 209us; 211us; 214us; 216us; 218us; 220us; 222us; 224us; 226us; 228us; 230us; 232us; 235us; 237us; 239us; 241us; 243us; 245us; 247us; 250us; 253us; 255us; 257us; 259us; 262us; 265us; 268us; 271us; 273us; 275us; 277us; 279us; 281us; 283us; 285us; 288us; 290us; 293us; 295us; 298us; 301us; 303us; 305us; 307us; 309us; 317us; 319us; 321us; 323us; 325us; 327us; 329us; 331us; 333us; 335us; 337us; 339us; 341us; 343us; 345us; 348us; 350us; 353us; 355us; 357us; 360us; 362us; 364us; 367us; 370us; 372us; 374us; 376us; 379us; 381us; 384us; 387us; 389us; 391us; 393us; 396us; 398us; 400us; 402us; 404us; 406us; 408us; 410us; 412us; 414us; 416us; 418us; 420us; 422us; 424us; 426us; 428us; 430us; 432us; |]
let _fsyacc_action_rows = 193
let _fsyacc_actionTableElements = [|1us; 32768us; 49us; 4us; 0us; 49152us; 1us; 32768us; 0us; 3us; 0us; 16385us; 1us; 32768us; 50us; 5us; 19us; 32768us; 4us; 90us; 7us; 122us; 10us; 64us; 11us; 66us; 12us; 88us; 13us; 83us; 16us; 68us; 29us; 11us; 36us; 136us; 39us; 40us; 42us; 182us; 43us; 184us; 44us; 117us; 46us; 109us; 50us; 192us; 51us; 191us; 52us; 190us; 53us; 189us; 54us; 188us; 18us; 32768us; 4us; 90us; 7us; 122us; 10us; 64us; 11us; 66us; 12us; 88us; 13us; 83us; 16us; 68us; 36us; 136us; 39us; 40us; 42us; 182us; 43us; 184us; 44us; 117us; 46us; 109us; 50us; 192us; 51us; 191us; 52us; 190us; 53us; 189us; 54us; 188us; 0us; 16386us; 0us; 16387us; 1us; 16389us; 29us; 11us; 0us; 16388us; 1us; 32768us; 50us; 12us; 1us; 16392us; 50us; 18us; 1us; 32768us; 38us; 14us; 1us; 32768us; 46us; 15us; 1us; 32768us; 50us; 23us; 1us; 32768us; 47us; 17us; 0us; 16390us; 1us; 16392us; 50us; 18us; 0us; 16391us; 1us; 16394us; 48us; 21us; 1us; 32768us; 50us; 23us; 0us; 16393us; 1us; 16396us; 28us; 24us; 1us; 32768us; 50us; 26us; 0us; 16395us; 1us; 16398us; 25us; 27us; 1us; 32768us; 50us; 26us; 0us; 16397us; 0us; 16399us; 1us; 16401us; 21us; 31us; 18us; 32768us; 4us; 90us; 7us; 122us; 10us; 64us; 11us; 66us; 12us; 88us; 13us; 83us; 16us; 68us; 36us; 136us; 39us; 40us; 42us; 182us; 43us; 184us; 44us; 117us; 46us; 109us; 50us; 192us; 51us; 191us; 52us; 190us; 53us; 189us; 54us; 188us; 0us; 16400us; 0us; 16402us; 0us; 16403us; 0us; 16404us; 0us; 16405us; 0us; 16406us; 0us; 16407us; 0us; 16408us; 4us; 32768us; 10us; 57us; 11us; 59us; 40us; 42us; 50us; 192us; 0us; 16409us; 1us; 32768us; 50us; 192us; 2us; 32768us; 50us; 192us; 51us; 126us; 1us; 32768us; 38us; 45us; 18us; 32768us; 4us; 90us; 7us; 122us; 10us; 64us; 11us; 66us; 12us; 88us; 13us; 83us; 16us; 68us; 36us; 136us; 39us; 40us; 42us; 182us; 43us; 184us; 44us; 117us; 46us; 109us; 50us; 192us; 51us; 191us; 52us; 190us; 53us; 189us; 54us; 188us; 1us; 16412us; 41us; 48us; 0us; 16410us; 1us; 32768us; 50us; 192us; 2us; 32768us; 50us; 192us; 51us; 126us; 1us; 32768us; 38us; 51us; 18us; 32768us; 4us; 90us; 7us; 122us; 10us; 64us; 11us; 66us; 12us; 88us; 13us; 83us; 16us; 68us; 36us; 136us; 39us; 40us; 42us; 182us; 43us; 184us; 44us; 117us; 46us; 109us; 50us; 192us; 51us; 191us; 52us; 190us; 53us; 189us; 54us; 188us; 1us; 16412us; 41us; 48us; 0us; 16411us; 1us; 32768us; 38us; 55us; 18us; 32768us; 4us; 90us; 7us; 122us; 10us; 64us; 11us; 66us; 12us; 88us; 13us; 83us; 16us; 68us; 36us; 136us; 39us; 40us; 42us; 182us; 43us; 184us; 44us; 117us; 46us; 109us; 50us; 192us; 51us; 191us; 52us; 190us; 53us; 189us; 54us; 188us; 0us; 16413us; 1us; 32768us; 50us; 192us; 0us; 16414us; 1us; 32768us; 50us; 192us; 0us; 16415us; 26us; 16441us; 0us; 16488us; 1us; 16488us; 2us; 16488us; 3us; 16488us; 6us; 16488us; 14us; 16488us; 15us; 16488us; 17us; 16488us; 20us; 16488us; 21us; 16488us; 23us; 16488us; 24us; 16488us; 25us; 16488us; 26us; 16488us; 27us; 16488us; 30us; 16488us; 31us; 16488us; 32us; 16488us; 33us; 16488us; 34us; 16488us; 35us; 16488us; 37us; 62us; 41us; 16488us; 45us; 16488us; 47us; 16488us; 48us; 16488us; 18us; 32768us; 4us; 90us; 7us; 122us; 10us; 64us; 11us; 66us; 12us; 88us; 13us; 83us; 16us; 68us; 36us; 136us; 39us; 40us; 42us; 182us; 43us; 184us; 44us; 117us; 46us; 109us; 50us; 192us; 51us; 191us; 52us; 190us; 53us; 189us; 54us; 188us; 0us; 16416us; 1us; 32768us; 50us; 192us; 0us; 16417us; 1us; 32768us; 50us; 192us; 0us; 16418us; 18us; 32768us; 4us; 90us; 7us; 122us; 10us; 64us; 11us; 66us; 12us; 88us; 13us; 83us; 16us; 68us; 36us; 136us; 39us; 40us; 42us; 182us; 43us; 184us; 44us; 117us; 46us; 109us; 50us; 192us; 51us; 191us; 52us; 190us; 53us; 189us; 54us; 188us; 1us; 32768us; 17us; 70us; 18us; 32768us; 4us; 90us; 7us; 122us; 10us; 64us; 11us; 66us; 12us; 88us; 13us; 83us; 16us; 68us; 36us; 136us; 39us; 40us; 42us; 182us; 43us; 184us; 44us; 117us; 46us; 109us; 50us; 192us; 51us; 191us; 52us; 190us; 53us; 189us; 54us; 188us; 1us; 32768us; 20us; 72us; 1us; 16423us; 19us; 77us; 1us; 16420us; 18us; 74us; 18us; 32768us; 4us; 90us; 7us; 122us; 10us; 64us; 11us; 66us; 12us; 88us; 13us; 83us; 16us; 68us; 36us; 136us; 39us; 40us; 42us; 182us; 43us; 184us; 44us; 117us; 46us; 109us; 50us; 192us; 51us; 191us; 52us; 190us; 53us; 189us; 54us; 188us; 1us; 32768us; 20us; 76us; 0us; 16419us; 18us; 32768us; 4us; 90us; 7us; 122us; 10us; 64us; 11us; 66us; 12us; 88us; 13us; 83us; 16us; 68us; 36us; 136us; 39us; 40us; 42us; 182us; 43us; 184us; 44us; 117us; 46us; 109us; 50us; 192us; 51us; 191us; 52us; 190us; 53us; 189us; 54us; 188us; 1us; 32768us; 17us; 79us; 18us; 32768us; 4us; 90us; 7us; 122us; 10us; 64us; 11us; 66us; 12us; 88us; 13us; 83us; 16us; 68us; 36us; 136us; 39us; 40us; 42us; 182us; 43us; 184us; 44us; 117us; 46us; 109us; 50us; 192us; 51us; 191us; 52us; 190us; 53us; 189us; 54us; 188us; 1us; 32768us; 20us; 81us; 1us; 16422us; 19us; 77us; 0us; 16421us; 18us; 32768us; 4us; 90us; 7us; 122us; 10us; 64us; 11us; 66us; 12us; 88us; 13us; 83us; 16us; 68us; 36us; 136us; 39us; 40us; 42us; 182us; 43us; 184us; 44us; 117us; 46us; 109us; 50us; 192us; 51us; 191us; 52us; 190us; 53us; 189us; 54us; 188us; 1us; 32768us; 14us; 85us; 18us; 32768us; 4us; 90us; 7us; 122us; 10us; 64us; 11us; 66us; 12us; 88us; 13us; 83us; 16us; 68us; 36us; 136us; 39us; 40us; 42us; 182us; 43us; 184us; 44us; 117us; 46us; 109us; 50us; 192us; 51us; 191us; 52us; 190us; 53us; 189us; 54us; 188us; 1us; 32768us; 15us; 87us; 0us; 16424us; 18us; 32768us; 4us; 90us; 7us; 122us; 10us; 64us; 11us; 66us; 12us; 88us; 13us; 83us; 16us; 68us; 36us; 136us; 39us; 40us; 42us; 182us; 43us; 184us; 44us; 117us; 46us; 109us; 50us; 192us; 51us; 191us; 52us; 190us; 53us; 189us; 54us; 188us; 0us; 16425us; 1us; 32768us; 50us; 192us; 1us; 32768us; 5us; 92us; 1us; 32768us; 48us; 97us; 1us; 32768us; 6us; 94us; 0us; 16426us; 1us; 16428us; 48us; 97us; 0us; 16427us; 1us; 32768us; 50us; 98us; 1us; 16431us; 50us; 102us; 1us; 32768us; 22us; 100us; 18us; 32768us; 4us; 90us; 7us; 122us; 10us; 64us; 11us; 66us; 12us; 88us; 13us; 83us; 16us; 68us; 36us; 136us; 39us; 40us; 42us; 182us; 43us; 184us; 44us; 117us; 46us; 109us; 50us; 192us; 51us; 191us; 52us; 190us; 53us; 189us; 54us; 188us; 0us; 16429us; 1us; 16431us; 50us; 102us; 0us; 16430us; 0us; 16432us; 1us; 16434us; 3us; 112us; 0us; 16433us; 0us; 16435us; 0us; 16436us; 18us; 32768us; 4us; 90us; 7us; 122us; 10us; 64us; 11us; 66us; 12us; 88us; 13us; 83us; 16us; 68us; 36us; 136us; 39us; 40us; 42us; 182us; 43us; 184us; 44us; 117us; 46us; 109us; 50us; 192us; 51us; 191us; 52us; 190us; 53us; 189us; 54us; 188us; 1us; 32768us; 47us; 111us; 0us; 16437us; 9us; 32768us; 36us; 136us; 42us; 182us; 43us; 184us; 44us; 179us; 50us; 192us; 51us; 191us; 52us; 190us; 53us; 189us; 54us; 188us; 1us; 16439us; 3us; 112us; 0us; 16438us; 18us; 32768us; 4us; 90us; 7us; 122us; 10us; 64us; 11us; 66us; 12us; 88us; 13us; 83us; 16us; 68us; 36us; 136us; 39us; 40us; 42us; 182us; 43us; 184us; 44us; 117us; 46us; 109us; 50us; 192us; 51us; 191us; 52us; 190us; 53us; 189us; 54us; 188us; 0us; 16440us; 18us; 32768us; 4us; 90us; 7us; 122us; 10us; 64us; 11us; 66us; 12us; 88us; 13us; 83us; 16us; 68us; 36us; 136us; 39us; 40us; 42us; 182us; 43us; 184us; 44us; 117us; 46us; 109us; 50us; 192us; 51us; 191us; 52us; 190us; 53us; 189us; 54us; 188us; 1us; 32768us; 45us; 119us; 24us; 16442us; 0us; 16485us; 2us; 16485us; 3us; 16485us; 6us; 16485us; 14us; 16485us; 15us; 16485us; 17us; 16485us; 20us; 16485us; 21us; 16485us; 23us; 16485us; 24us; 16485us; 25us; 16485us; 26us; 16485us; 27us; 16485us; 30us; 16485us; 31us; 16485us; 32us; 16485us; 33us; 16485us; 34us; 16485us; 35us; 16485us; 41us; 16485us; 45us; 16485us; 47us; 16485us; 48us; 16485us; 18us; 16444us; 4us; 90us; 7us; 122us; 10us; 64us; 11us; 66us; 12us; 88us; 13us; 83us; 16us; 68us; 36us; 136us; 39us; 40us; 42us; 182us; 43us; 184us; 44us; 117us; 46us; 109us; 50us; 192us; 51us; 191us; 52us; 190us; 53us; 189us; 54us; 188us; 0us; 16443us; 2us; 32768us; 50us; 192us; 51us; 126us; 1us; 32768us; 8us; 124us; 18us; 32768us; 4us; 90us; 7us; 122us; 10us; 64us; 11us; 66us; 12us; 88us; 13us; 83us; 16us; 68us; 36us; 136us; 39us; 40us; 42us; 182us; 43us; 184us; 44us; 117us; 46us; 109us; 50us; 192us; 51us; 191us; 52us; 190us; 53us; 189us; 54us; 188us; 0us; 16445us; 0us; 16446us; 0us; 16447us; 1us; 16449us; 50us; 192us; 0us; 16448us; 1us; 16451us; 2us; 132us; 0us; 16450us; 9us; 32768us; 36us; 136us; 42us; 182us; 43us; 184us; 44us; 179us; 50us; 192us; 51us; 191us; 52us; 190us; 53us; 189us; 54us; 188us; 1us; 16453us; 2us; 132us; 0us; 16452us; 0us; 16454us; 8us; 32768us; 42us; 182us; 43us; 184us; 44us; 179us; 50us; 192us; 51us; 191us; 52us; 190us; 53us; 189us; 54us; 188us; 0us; 16455us; 6us; 16462us; 30us; 139us; 31us; 141us; 32us; 143us; 33us; 145us; 34us; 147us; 35us; 149us; 8us; 32768us; 42us; 182us; 43us; 184us; 44us; 179us; 50us; 192us; 51us; 191us; 52us; 190us; 53us; 189us; 54us; 188us; 0us; 16456us; 8us; 32768us; 42us; 182us; 43us; 184us; 44us; 179us; 50us; 192us; 51us; 191us; 52us; 190us; 53us; 189us; 54us; 188us; 0us; 16457us; 8us; 32768us; 42us; 182us; 43us; 184us; 44us; 179us; 50us; 192us; 51us; 191us; 52us; 190us; 53us; 189us; 54us; 188us; 0us; 16458us; 8us; 32768us; 42us; 182us; 43us; 184us; 44us; 179us; 50us; 192us; 51us; 191us; 52us; 190us; 53us; 189us; 54us; 188us; 0us; 16459us; 8us; 32768us; 42us; 182us; 43us; 184us; 44us; 179us; 50us; 192us; 51us; 191us; 52us; 190us; 53us; 189us; 54us; 188us; 0us; 16460us; 8us; 32768us; 42us; 182us; 43us; 184us; 44us; 179us; 50us; 192us; 51us; 191us; 52us; 190us; 53us; 189us; 54us; 188us; 0us; 16461us; 0us; 16463us; 0us; 16464us; 2us; 16466us; 23us; 164us; 24us; 165us; 0us; 16465us; 1us; 16482us; 1us; 156us; 5us; 32768us; 50us; 192us; 51us; 191us; 52us; 190us; 53us; 189us; 54us; 188us; 0us; 16467us; 1us; 16469us; 1us; 159us; 5us; 32768us; 50us; 192us; 51us; 191us; 52us; 190us; 53us; 189us; 54us; 188us; 0us; 16468us; 8us; 32768us; 42us; 182us; 43us; 184us; 44us; 179us; 50us; 192us; 51us; 191us; 52us; 190us; 53us; 189us; 54us; 188us; 2us; 16471us; 23us; 164us; 24us; 165us; 0us; 16470us; 0us; 16472us; 0us; 16473us; 2us; 16475us; 25us; 171us; 26us; 172us; 0us; 16474us; 8us; 32768us; 42us; 182us; 43us; 184us; 44us; 179us; 50us; 192us; 51us; 191us; 52us; 190us; 53us; 189us; 54us; 188us; 2us; 16477us; 25us; 171us; 26us; 172us; 0us; 16476us; 0us; 16478us; 0us; 16479us; 1us; 16481us; 27us; 174us; 8us; 32768us; 42us; 182us; 43us; 184us; 44us; 179us; 50us; 192us; 51us; 191us; 52us; 190us; 53us; 189us; 54us; 188us; 0us; 16480us; 0us; 16482us; 0us; 16483us; 0us; 16484us; 18us; 32768us; 4us; 90us; 7us; 122us; 10us; 64us; 11us; 66us; 12us; 88us; 13us; 83us; 16us; 68us; 36us; 136us; 39us; 40us; 42us; 182us; 43us; 184us; 44us; 117us; 46us; 109us; 50us; 192us; 51us; 191us; 52us; 190us; 53us; 189us; 54us; 188us; 1us; 32768us; 45us; 181us; 0us; 16485us; 8us; 32768us; 42us; 182us; 43us; 184us; 44us; 179us; 50us; 192us; 51us; 191us; 52us; 190us; 53us; 189us; 54us; 188us; 0us; 16486us; 8us; 32768us; 42us; 182us; 43us; 184us; 44us; 179us; 50us; 192us; 51us; 191us; 52us; 190us; 53us; 189us; 54us; 188us; 0us; 16487us; 0us; 16488us; 0us; 16489us; 0us; 16490us; 0us; 16491us; 0us; 16492us; 0us; 16493us; 0us; 16494us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 2us; 3us; 5us; 6us; 8us; 28us; 47us; 48us; 49us; 51us; 52us; 54us; 56us; 58us; 60us; 62us; 64us; 65us; 67us; 68us; 70us; 72us; 73us; 75us; 77us; 78us; 80us; 82us; 83us; 84us; 86us; 105us; 106us; 107us; 108us; 109us; 110us; 111us; 112us; 113us; 118us; 119us; 121us; 124us; 126us; 145us; 147us; 148us; 150us; 153us; 155us; 174us; 176us; 177us; 179us; 198us; 199us; 201us; 202us; 204us; 205us; 232us; 251us; 252us; 254us; 255us; 257us; 258us; 277us; 279us; 298us; 300us; 302us; 304us; 323us; 325us; 326us; 345us; 347us; 366us; 368us; 370us; 371us; 390us; 392us; 411us; 413us; 414us; 433us; 434us; 436us; 438us; 440us; 442us; 443us; 445us; 446us; 448us; 450us; 452us; 471us; 472us; 474us; 475us; 476us; 478us; 479us; 480us; 481us; 500us; 502us; 503us; 513us; 515us; 516us; 535us; 536us; 555us; 557us; 582us; 601us; 602us; 605us; 607us; 626us; 627us; 628us; 629us; 631us; 632us; 634us; 635us; 645us; 647us; 648us; 649us; 658us; 659us; 666us; 675us; 676us; 685us; 686us; 695us; 696us; 705us; 706us; 715us; 716us; 725us; 726us; 727us; 728us; 731us; 732us; 734us; 740us; 741us; 743us; 749us; 750us; 759us; 762us; 763us; 764us; 765us; 768us; 769us; 778us; 781us; 782us; 783us; 784us; 786us; 795us; 796us; 797us; 798us; 799us; 818us; 820us; 821us; 830us; 831us; 840us; 841us; 842us; 843us; 844us; 845us; 846us; 847us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 4us; 3us; 2us; 1us; 7us; 2us; 0us; 3us; 1us; 3us; 1us; 3us; 1us; 1us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 7us; 6us; 0us; 3us; 2us; 2us; 3us; 2us; 2us; 9us; 6us; 6us; 5us; 0us; 5us; 2us; 5us; 2us; 1us; 5us; 2us; 0us; 1us; 2us; 1us; 1us; 1us; 3us; 3us; 2us; 2us; 1us; 3us; 2us; 1us; 4us; 1us; 1us; 2us; 1us; 2us; 1us; 3us; 2us; 1us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 1us; 2us; 1us; 3us; 3us; 1us; 3us; 2us; 1us; 1us; 2us; 1us; 3us; 2us; 1us; 1us; 3us; 1us; 1us; 1us; 1us; 3us; 2us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 4us; 5us; 5us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 10us; 10us; 11us; 11us; 11us; 11us; 11us; 11us; 11us; 12us; 13us; 14us; 14us; 15us; 15us; 15us; 16us; 16us; 16us; 17us; 17us; 18us; 18us; 18us; 19us; 20us; 21us; 22us; 22us; 23us; 24us; 24us; 25us; 25us; 25us; 25us; 25us; 25us; 26us; 26us; 27us; 28us; 28us; 29us; 29us; 30us; 31us; 31us; 32us; 32us; 33us; 33us; 34us; 34us; 35us; 35us; 36us; 36us; 36us; 36us; 36us; 36us; 36us; 37us; 37us; 38us; 38us; 39us; 40us; 40us; 41us; 41us; 42us; 42us; 43us; 43us; 44us; 44us; 45us; 45us; 46us; 46us; 47us; 47us; 47us; 47us; 48us; 49us; 50us; 50us; 51us; 51us; 51us; 51us; 52us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 65535us; 65535us; 16386us; 16387us; 65535us; 16388us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16390us; 65535us; 16391us; 65535us; 65535us; 16393us; 65535us; 65535us; 16395us; 65535us; 65535us; 16397us; 16399us; 65535us; 65535us; 16400us; 16402us; 16403us; 16404us; 16405us; 16406us; 16407us; 16408us; 65535us; 16409us; 65535us; 65535us; 65535us; 65535us; 65535us; 16410us; 65535us; 65535us; 65535us; 65535us; 65535us; 16411us; 65535us; 65535us; 16413us; 65535us; 16414us; 65535us; 16415us; 65535us; 65535us; 16416us; 65535us; 16417us; 65535us; 16418us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16419us; 65535us; 65535us; 65535us; 65535us; 65535us; 16421us; 65535us; 65535us; 65535us; 65535us; 16424us; 65535us; 16425us; 65535us; 65535us; 65535us; 65535us; 16426us; 65535us; 16427us; 65535us; 65535us; 65535us; 65535us; 16429us; 65535us; 16430us; 16432us; 65535us; 16433us; 16435us; 16436us; 65535us; 65535us; 16437us; 65535us; 65535us; 16438us; 65535us; 16440us; 65535us; 65535us; 65535us; 65535us; 16443us; 65535us; 65535us; 65535us; 16445us; 16446us; 16447us; 65535us; 16448us; 65535us; 16450us; 65535us; 65535us; 16452us; 16454us; 65535us; 16455us; 65535us; 65535us; 16456us; 65535us; 16457us; 65535us; 16458us; 65535us; 16459us; 65535us; 16460us; 65535us; 16461us; 16463us; 16464us; 65535us; 16465us; 65535us; 65535us; 16467us; 65535us; 65535us; 16468us; 65535us; 65535us; 16470us; 16472us; 16473us; 65535us; 16474us; 65535us; 65535us; 16476us; 16478us; 16479us; 65535us; 65535us; 16480us; 16482us; 16483us; 16484us; 65535us; 65535us; 16485us; 65535us; 16486us; 65535us; 16487us; 16488us; 16489us; 16490us; 16491us; 16492us; 16493us; 16494us; |]
let _fsyacc_reductions ()  =    [| 
# 553 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  AlyoshaAST.program )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Microsoft.FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startstart));
# 562 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Prog)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 37 "AlyoshaParser.fsy"
                                        Program _1 
                   )
# 37 "AlyoshaParser.fsy"
                 :  AlyoshaAST.program ));
# 573 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'UnionBlock)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'Block)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 40 "AlyoshaParser.fsy"
                                                      ( _2, _3 , _4 ) 
                   )
# 40 "AlyoshaParser.fsy"
                 : 'Prog));
# 586 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Block)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 41 "AlyoshaParser.fsy"
                                               (_2, [] , _3 ) 
                   )
# 41 "AlyoshaParser.fsy"
                 : 'Prog));
# 598 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'UnionDef)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'UnionBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 44 "AlyoshaParser.fsy"
                                              _1 :: _2  
                   )
# 44 "AlyoshaParser.fsy"
                 : 'UnionBlock));
# 610 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'UnionDef)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 45 "AlyoshaParser.fsy"
                                      [ _1 ] 
                   )
# 45 "AlyoshaParser.fsy"
                 : 'UnionBlock));
# 621 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'TypeVariables)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'UnionElementList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 48 "AlyoshaParser.fsy"
                                                                                       ( _2 , _3 , _6 ) 
                   )
# 48 "AlyoshaParser.fsy"
                 : 'UnionDef));
# 634 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'TypeVariables)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 51 "AlyoshaParser.fsy"
                                           _1 :: _2 
                   )
# 51 "AlyoshaParser.fsy"
                 : 'TypeVariables));
# 646 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 52 "AlyoshaParser.fsy"
                              [] 
                   )
# 52 "AlyoshaParser.fsy"
                 : 'TypeVariables));
# 656 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'UnionElement)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'UnionElementList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 55 "AlyoshaParser.fsy"
                                                             _1 :: _3 
                   )
# 55 "AlyoshaParser.fsy"
                 : 'UnionElementList));
# 668 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'UnionElement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 56 "AlyoshaParser.fsy"
                                             [ _1 ] 
                   )
# 56 "AlyoshaParser.fsy"
                 : 'UnionElementList));
# 679 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'TypeCortage)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 59 "AlyoshaParser.fsy"
                                              ( _1 , _3 ) 
                   )
# 59 "AlyoshaParser.fsy"
                 : 'UnionElement));
# 691 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 60 "AlyoshaParser.fsy"
                                  ( _1 , []) 
                   )
# 60 "AlyoshaParser.fsy"
                 : 'UnionElement));
# 702 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'TypeCortage)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 63 "AlyoshaParser.fsy"
                                              _1 :: _3 
                   )
# 63 "AlyoshaParser.fsy"
                 : 'TypeCortage));
# 714 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 64 "AlyoshaParser.fsy"
                                  [ _1 ] 
                   )
# 64 "AlyoshaParser.fsy"
                 : 'TypeCortage));
# 725 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ExpressionSequence)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 67 "AlyoshaParser.fsy"
                                              Block _1 
                   )
# 67 "AlyoshaParser.fsy"
                 : 'Block));
# 736 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ExpressionSequence)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 70 "AlyoshaParser.fsy"
                                                                  _1 :: _3 
                   )
# 70 "AlyoshaParser.fsy"
                 : 'ExpressionSequence));
# 748 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 71 "AlyoshaParser.fsy"
                                            [ _1 ] 
                   )
# 71 "AlyoshaParser.fsy"
                 : 'ExpressionSequence));
# 759 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'LetAssignment)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 74 "AlyoshaParser.fsy"
                                           _1 
                   )
# 74 "AlyoshaParser.fsy"
                 : 'Statement));
# 770 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'LetRecursiveAssignment)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 75 "AlyoshaParser.fsy"
                                                 _1
                   )
# 75 "AlyoshaParser.fsy"
                 : 'Statement));
# 781 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Reassignment)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 76 "AlyoshaParser.fsy"
                                          Reassignment _1 
                   )
# 76 "AlyoshaParser.fsy"
                 : 'Statement));
# 792 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'IfStatement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 77 "AlyoshaParser.fsy"
                                         _1 
                   )
# 77 "AlyoshaParser.fsy"
                 : 'Statement));
# 803 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'WhileStatement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 78 "AlyoshaParser.fsy"
                                           _1 
                   )
# 78 "AlyoshaParser.fsy"
                 : 'Statement));
# 814 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'WriteStatement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 79 "AlyoshaParser.fsy"
                                           _1 
                   )
# 79 "AlyoshaParser.fsy"
                 : 'Statement));
# 825 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'MatchStatement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 80 "AlyoshaParser.fsy"
                                           _1 
                   )
# 80 "AlyoshaParser.fsy"
                 : 'Statement));
# 836 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Assignment)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 84 "AlyoshaParser.fsy"
                                          LetAssignment _2 
                   )
# 84 "AlyoshaParser.fsy"
                 : 'LetAssignment));
# 847 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Id)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'FunArguments)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'RecAndList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 87 "AlyoshaParser.fsy"
                                                                              LetRecursiveAssignment( (_3, _4, _6, ref -1) :: _7 ) 
                   )
# 87 "AlyoshaParser.fsy"
                 : 'LetRecursiveAssignment));
# 861 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Id)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'FunArguments)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'RecAndList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 90 "AlyoshaParser.fsy"
                                                                             (_2, _3, _5, ref -1) :: _6 
                   )
# 90 "AlyoshaParser.fsy"
                 : 'RecAndList));
# 875 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 91 "AlyoshaParser.fsy"
                                       [] 
                   )
# 91 "AlyoshaParser.fsy"
                 : 'RecAndList));
# 885 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Id)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 94 "AlyoshaParser.fsy"
                                               UsualAssignment (_1, _3) 
                   )
# 94 "AlyoshaParser.fsy"
                 : 'Assignment));
# 897 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Id)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 95 "AlyoshaParser.fsy"
                                        ReadNum _2 
                   )
# 95 "AlyoshaParser.fsy"
                 : 'Assignment));
# 908 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Id)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 "AlyoshaParser.fsy"
                                         ReadLine _2 
                   )
# 96 "AlyoshaParser.fsy"
                 : 'Assignment));
# 919 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Id)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 "AlyoshaParser.fsy"
                                                 UsualAssignment (_1, _3) 
                   )
# 99 "AlyoshaParser.fsy"
                 : 'Reassignment));
# 931 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Id)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 100 "AlyoshaParser.fsy"
                                        ReadNum _2 
                   )
# 100 "AlyoshaParser.fsy"
                 : 'Reassignment));
# 942 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Id)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 "AlyoshaParser.fsy"
                                         ReadLine _2 
                   )
# 101 "AlyoshaParser.fsy"
                 : 'Reassignment));
# 953 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'Block)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'ElifList)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'Block)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 "AlyoshaParser.fsy"
                                                                             IfStatement( _2 , _4 , _6 , Some( _8 )) 
                   )
# 105 "AlyoshaParser.fsy"
                 : 'IfStatement));
# 967 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'Block)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'ElifList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 106 "AlyoshaParser.fsy"
                                                                   IfStatement( _2 , _4 , _6 , None) 
                   )
# 106 "AlyoshaParser.fsy"
                 : 'IfStatement));
# 980 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'Block)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'ElifList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 109 "AlyoshaParser.fsy"
                                                                 ( _2 , _4 ) :: _6 
                   )
# 109 "AlyoshaParser.fsy"
                 : 'ElifList));
# 993 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'Block)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 110 "AlyoshaParser.fsy"
                                                           [ ( _2 , _4 ) ] 
                   )
# 110 "AlyoshaParser.fsy"
                 : 'ElifList));
# 1005 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 "AlyoshaParser.fsy"
                                    [] 
                   )
# 111 "AlyoshaParser.fsy"
                 : 'ElifList));
# 1015 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'Block)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 114 "AlyoshaParser.fsy"
                                                       WhileStatement( _2 , _4 ) 
                   )
# 114 "AlyoshaParser.fsy"
                 : 'WhileStatement));
# 1027 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 "AlyoshaParser.fsy"
                                              WriteStatement( _2 ) 
                   )
# 117 "AlyoshaParser.fsy"
                 : 'WriteStatement));
# 1038 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Id)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'GuardList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 120 "AlyoshaParser.fsy"
                                                           MatchStatement( _2 , _4 ) 
                   )
# 120 "AlyoshaParser.fsy"
                 : 'MatchStatement));
# 1050 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Guard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'GuardList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 "AlyoshaParser.fsy"
                                          _1 :: _2 
                   )
# 123 "AlyoshaParser.fsy"
                 : 'GuardList));
# 1062 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Guard)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 "AlyoshaParser.fsy"
                                   [ _1 ] 
                   )
# 124 "AlyoshaParser.fsy"
                 : 'GuardList));
# 1073 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'GuardArgs)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'Block)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 "AlyoshaParser.fsy"
                                                        ( _2 , _3 , _5 ) 
                   )
# 127 "AlyoshaParser.fsy"
                 : 'Guard));
# 1086 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'GuardArgs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "AlyoshaParser.fsy"
                                       _1 :: _2 
                   )
# 130 "AlyoshaParser.fsy"
                 : 'GuardArgs));
# 1098 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 "AlyoshaParser.fsy"
                             [] 
                   )
# 131 "AlyoshaParser.fsy"
                 : 'GuardArgs));
# 1108 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Statement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "AlyoshaParser.fsy"
                                         Statement _1 
                   )
# 134 "AlyoshaParser.fsy"
                 : 'Expression));
# 1119 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'LogicTerm)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'RightLogicTermList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "AlyoshaParser.fsy"
                                                       OrList( _1 :: _2 ) 
                   )
# 135 "AlyoshaParser.fsy"
                 : 'Expression));
# 1131 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'LogicTerm)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 "AlyoshaParser.fsy"
                                         _1 
                   )
# 136 "AlyoshaParser.fsy"
                 : 'Expression));
# 1142 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Abstraction)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 "AlyoshaParser.fsy"
                                          _1 
                   )
# 137 "AlyoshaParser.fsy"
                 : 'Expression));
# 1153 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Application)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 "AlyoshaParser.fsy"
                                          _1 
                   )
# 138 "AlyoshaParser.fsy"
                 : 'Expression));
# 1164 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Block)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "AlyoshaParser.fsy"
                                                SequenceExpression _2 
                   )
# 139 "AlyoshaParser.fsy"
                 : 'Expression));
# 1175 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'LogicTerm)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'RightLogicTermList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "AlyoshaParser.fsy"
                                                          _2 :: _3 
                   )
# 142 "AlyoshaParser.fsy"
                 : 'RightLogicTermList));
# 1187 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'LogicTerm)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "AlyoshaParser.fsy"
                                         [_2] 
                   )
# 143 "AlyoshaParser.fsy"
                 : 'RightLogicTermList));
# 1198 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'LeftAppPart)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ApplicantsList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "AlyoshaParser.fsy"
                                                     Application( _1 , _2 ) 
                   )
# 146 "AlyoshaParser.fsy"
                 : 'Application));
# 1210 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Id)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "AlyoshaParser.fsy"
                                   ExprId( _1) 
                   )
# 149 "AlyoshaParser.fsy"
                 : 'LeftAppPart));
# 1221 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "AlyoshaParser.fsy"
                                                    _2  
                   )
# 150 "AlyoshaParser.fsy"
                 : 'LeftAppPart));
# 1232 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ApplicantsList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "AlyoshaParser.fsy"
                                                     _1 :: _2 
                   )
# 153 "AlyoshaParser.fsy"
                 : 'ApplicantsList));
# 1244 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "AlyoshaParser.fsy"
                                         [ _1 ] 
                   )
# 154 "AlyoshaParser.fsy"
                 : 'ApplicantsList));
# 1255 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'FunArguments)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "AlyoshaParser.fsy"
                                                               Abstraction (_2, _4, ref -1) 
                   )
# 157 "AlyoshaParser.fsy"
                 : 'Abstraction));
# 1267 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "AlyoshaParser.fsy"
                                [] 
                   )
# 160 "AlyoshaParser.fsy"
                 : 'FunArguments));
# 1277 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'IdList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 "AlyoshaParser.fsy"
                                 _1 
                   )
# 161 "AlyoshaParser.fsy"
                 : 'FunArguments));
# 1288 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Id)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'IdList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 "AlyoshaParser.fsy"
                                    _1 :: _2 
                   )
# 164 "AlyoshaParser.fsy"
                 : 'IdList));
# 1300 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Id)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "AlyoshaParser.fsy"
                              [ _1 ] 
                   )
# 165 "AlyoshaParser.fsy"
                 : 'IdList));
# 1311 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'LogicFactor)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'RightLogicFactorList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "AlyoshaParser.fsy"
                                                           AndList ( _1 :: _2) 
                   )
# 168 "AlyoshaParser.fsy"
                 : 'LogicTerm));
# 1323 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'LogicFactor)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "AlyoshaParser.fsy"
                                           _1 
                   )
# 169 "AlyoshaParser.fsy"
                 : 'LogicTerm));
# 1334 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'LogicFactor)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'RightLogicFactorList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "AlyoshaParser.fsy"
                                                               _2 :: _3 
                   )
# 172 "AlyoshaParser.fsy"
                 : 'RightLogicFactorList));
# 1346 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'LogicFactor)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 "AlyoshaParser.fsy"
                                               [_2] 
                   )
# 173 "AlyoshaParser.fsy"
                 : 'RightLogicFactorList));
# 1357 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'CompOp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "AlyoshaParser.fsy"
                                  _1 
                   )
# 176 "AlyoshaParser.fsy"
                 : 'LogicFactor));
# 1368 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'CompOp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "AlyoshaParser.fsy"
                                     Not _2 
                   )
# 177 "AlyoshaParser.fsy"
                 : 'LogicFactor));
# 1379 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'SumOp)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'SumOp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "AlyoshaParser.fsy"
                                               IsEqual (_1, _3) 
                   )
# 180 "AlyoshaParser.fsy"
                 : 'CompOp));
# 1391 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'SumOp)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'SumOp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "AlyoshaParser.fsy"
                                               NotEqual (_1, _3) 
                   )
# 181 "AlyoshaParser.fsy"
                 : 'CompOp));
# 1403 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'SumOp)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'SumOp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "AlyoshaParser.fsy"
                                               Greater (_1, _3) 
                   )
# 182 "AlyoshaParser.fsy"
                 : 'CompOp));
# 1415 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'SumOp)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'SumOp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "AlyoshaParser.fsy"
                                               NotLess (_1, _3) 
                   )
# 183 "AlyoshaParser.fsy"
                 : 'CompOp));
# 1427 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'SumOp)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'SumOp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "AlyoshaParser.fsy"
                                            Less (_1, _3) 
                   )
# 184 "AlyoshaParser.fsy"
                 : 'CompOp));
# 1439 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'SumOp)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'SumOp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "AlyoshaParser.fsy"
                                                 NotGreater (_1, _3) 
                   )
# 185 "AlyoshaParser.fsy"
                 : 'CompOp));
# 1451 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'SumOp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 "AlyoshaParser.fsy"
                                     _1 
                   )
# 186 "AlyoshaParser.fsy"
                 : 'CompOp));
# 1462 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ArithmeticOp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "AlyoshaParser.fsy"
                                       _1 
                   )
# 189 "AlyoshaParser.fsy"
                 : 'SumOp));
# 1473 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'StringConcat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "AlyoshaParser.fsy"
                                       _1 
                   )
# 190 "AlyoshaParser.fsy"
                 : 'SumOp));
# 1484 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Term)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'RightTermList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 "AlyoshaParser.fsy"
                                             Sum ( (Plus, _1) :: _2 ) 
                   )
# 193 "AlyoshaParser.fsy"
                 : 'ArithmeticOp));
# 1496 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Term)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "AlyoshaParser.fsy"
                                   _1 
                   )
# 194 "AlyoshaParser.fsy"
                 : 'ArithmeticOp));
# 1507 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'SimpleFactor)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'StringConcatList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 197 "AlyoshaParser.fsy"
                                                           StringConcat (_1 :: _3)
                   )
# 197 "AlyoshaParser.fsy"
                 : 'StringConcat));
# 1519 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'SimpleFactor)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'StringConcatList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 200 "AlyoshaParser.fsy"
                                                            _1 :: _3 
                   )
# 200 "AlyoshaParser.fsy"
                 : 'StringConcatList));
# 1531 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'SimpleFactor)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 201 "AlyoshaParser.fsy"
                                            [_1] 
                   )
# 201 "AlyoshaParser.fsy"
                 : 'StringConcatList));
# 1542 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ArithmeticOpSign)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Term)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'RightTermList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 204 "AlyoshaParser.fsy"
                                                              (_1, _2) :: _3 
                   )
# 204 "AlyoshaParser.fsy"
                 : 'RightTermList));
# 1555 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ArithmeticOpSign)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Term)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 205 "AlyoshaParser.fsy"
                                                    [(_1, _2)] 
                   )
# 205 "AlyoshaParser.fsy"
                 : 'RightTermList));
# 1567 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 208 "AlyoshaParser.fsy"
                               Plus 
                   )
# 208 "AlyoshaParser.fsy"
                 : 'ArithmeticOpSign));
# 1577 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 209 "AlyoshaParser.fsy"
                                Minus 
                   )
# 209 "AlyoshaParser.fsy"
                 : 'ArithmeticOpSign));
# 1587 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Factor)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'RightFactorList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 212 "AlyoshaParser.fsy"
                                                 Mult ((Mul, _1) :: _2) 
                   )
# 212 "AlyoshaParser.fsy"
                 : 'Term));
# 1599 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Factor)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 213 "AlyoshaParser.fsy"
                                 _1 
                   )
# 213 "AlyoshaParser.fsy"
                 : 'Term));
# 1610 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'FactorOpSign)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Factor)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'RightFactorList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 "AlyoshaParser.fsy"
                                                              (_1, _2) :: _3 
                   )
# 216 "AlyoshaParser.fsy"
                 : 'RightFactorList));
# 1623 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'FactorOpSign)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Factor)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 217 "AlyoshaParser.fsy"
                                                  [(_1, _2)] 
                   )
# 217 "AlyoshaParser.fsy"
                 : 'RightFactorList));
# 1635 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 220 "AlyoshaParser.fsy"
                              Mul 
                   )
# 220 "AlyoshaParser.fsy"
                 : 'FactorOpSign));
# 1645 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 221 "AlyoshaParser.fsy"
                              Div 
                   )
# 221 "AlyoshaParser.fsy"
                 : 'FactorOpSign));
# 1655 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ModFactor)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ModFactor)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 224 "AlyoshaParser.fsy"
                                                  Mod ( _1 , _3 ) 
                   )
# 224 "AlyoshaParser.fsy"
                 : 'Factor));
# 1667 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ModFactor)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 225 "AlyoshaParser.fsy"
                                        _1 
                   )
# 225 "AlyoshaParser.fsy"
                 : 'Factor));
# 1678 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'SimpleFactor)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 228 "AlyoshaParser.fsy"
                                          _1 
                   )
# 228 "AlyoshaParser.fsy"
                 : 'ModFactor));
# 1689 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Reference)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 229 "AlyoshaParser.fsy"
                                        _1 
                   )
# 229 "AlyoshaParser.fsy"
                 : 'ModFactor));
# 1700 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Unreference)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 230 "AlyoshaParser.fsy"
                                         _1 
                   )
# 230 "AlyoshaParser.fsy"
                 : 'ModFactor));
# 1711 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expression)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 231 "AlyoshaParser.fsy"
                                                   _2 
                   )
# 231 "AlyoshaParser.fsy"
                 : 'ModFactor));
# 1722 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ModFactor)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 234 "AlyoshaParser.fsy"
                                        Reference _2
                   )
# 234 "AlyoshaParser.fsy"
                 : 'Reference));
# 1733 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ModFactor)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 237 "AlyoshaParser.fsy"
                                         Unref _2
                   )
# 237 "AlyoshaParser.fsy"
                 : 'Unreference));
# 1744 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Id)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 240 "AlyoshaParser.fsy"
                                ExprId (_1) 
                   )
# 240 "AlyoshaParser.fsy"
                 : 'SimpleFactor));
# 1755 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'SimpleValue)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 241 "AlyoshaParser.fsy"
                                       _1 
                   )
# 241 "AlyoshaParser.fsy"
                 : 'SimpleFactor));
# 1766 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.Int32)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 244 "AlyoshaParser.fsy"
                                  NumVal _1 
                   )
# 244 "AlyoshaParser.fsy"
                 : 'SimpleValue));
# 1777 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 245 "AlyoshaParser.fsy"
                                   BoolVal _1 
                   )
# 245 "AlyoshaParser.fsy"
                 : 'SimpleValue));
# 1788 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 246 "AlyoshaParser.fsy"
                                     StringVal _1 
                   )
# 246 "AlyoshaParser.fsy"
                 : 'SimpleValue));
# 1799 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 247 "AlyoshaParser.fsy"
                                 UnitVal 
                   )
# 247 "AlyoshaParser.fsy"
                 : 'SimpleValue));
# 1809 "obj\Debug\AlyoshaParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 249 "AlyoshaParser.fsy"
                               _1, ref -1
                   )
# 249 "AlyoshaParser.fsy"
                 : 'Id));
|]
# 1821 "obj\Debug\AlyoshaParser.fs"
let tables () : Microsoft.FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:Microsoft.FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 58;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = (tables ()).Interpret(lexer, lexbuf, startState)
let start lexer lexbuf :  AlyoshaAST.program  =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 0))
